ARG RVM_RUBY_VERSIONS="1.9.3-dev"
FROM msati/docker-rvm
USER ${RVM_USER}
ENV RUBY=1.9.3-dev

# install packages via apt
USER root
# set noninteractive installation (mainly for tzdata)
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update -yqq \
&& apt-get install -yqq --no-install-recommends \
    apt-utils \
    libpq-dev \
    tzdata \
    nodejs \
&& apt-get -q clean \
&& rm -rf /var/lib/apt/lists

# NOTE:
# install packages for developing (can be omitted if not needed)
RUN apt-get update -yqq \
&& apt-get install -yqq --no-install-recommends \
    vim-tiny \
    tmux \
    net-tools \
&& apt-get -q clean \
&& rm -rf /var/lib/apt/lists

# set working directory
WORKDIR /var/www/inki/

# copy Gemfile[.lock] (required to install ruby gems)
COPY Gemfile .
COPY Gemfile.lock .

# install ruby gems as rvm user
USER ${RVM_USER}

# install inki requirements
# # install bundler version that works
RUN gem install bundler:1.3.0
# install all bundles from Gemfile[.lock]
RUN bundle install

# Copy Inki source files/dirs into image
# # just copy whole project directory + set owner to rvm
COPY --chown=rvm:rvm . .

# move entrypoint script to app-root so it can then be called
USER root
# change owner of project_root to rvm
RUN chown rvm:rvm .
RUN mv ./docker/entrypoint.bash .
